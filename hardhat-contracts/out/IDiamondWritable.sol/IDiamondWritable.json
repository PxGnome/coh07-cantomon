{
  "abi": [
    {
      "inputs": [],
      "name": "DiamondWritable__InvalidInitializationParameters",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__RemoveTargetNotZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__ReplaceTargetIsIdentical",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorAlreadyAdded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorIsImmutable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorNotSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__TargetHasNoCode",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondWritableInternal.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamondWritableInternal.FacetCut[]",
          "name": "facetCuts",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondWritableInternal.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondWritableInternal.FacetCut[]",
          "name": "facetCuts",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}}},\"title\":\"Diamond proxy upgrade interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":\"IDiamondWritable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@hyperlane-xyz/=node_modules/@hyperlane-xyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidstate/=node_modules/@solidstate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__InvalidInitializationParameters"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__RemoveTargetNotZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__ReplaceTargetIsIdentical"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorAlreadyAdded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorIsImmutable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorNotFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorNotSpecified"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__TargetHasNoCode"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamondWritableInternal.FacetCut[]",
              "name": "facetCuts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondWritableInternal.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamondWritableInternal.FacetCut[]",
              "name": "facetCuts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondWritableInternal.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "diamondCut"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "params": {
              "data": "optional initialization function call data",
              "facetCuts": "array of structured Diamond facet update data",
              "target": "optional target of initialization delegatecall"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "notice": "update diamond facets and optionally execute arbitrary initialization function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@hyperlane-xyz/=node_modules/@hyperlane-xyz/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidstate/=node_modules/@solidstate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a/=node_modules/erc721a/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": "IDiamondWritable"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
        "keccak256": "0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef",
        "urls": [
          "bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c",
          "dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
        "keccak256": "0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605",
        "urls": [
          "bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740",
          "dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
    "id": 7434,
    "exportedSymbols": {
      "IDiamondWritable": [
        7433
      ],
      "IDiamondWritableInternal": [
        7475
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:704:77",
    "nodes": [
      {
        "id": 7415,
        "nodeType": "PragmaDirective",
        "src": "33:23:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 7417,
        "nodeType": "ImportDirective",
        "src": "58:74:77",
        "nodes": [],
        "absolutePath": "node_modules/@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
        "file": "./IDiamondWritableInternal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7434,
        "sourceUnit": 7476,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7416,
              "name": "IDiamondWritableInternal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7475,
              "src": "67:24:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7433,
        "nodeType": "ContractDefinition",
        "src": "236:500:77",
        "nodes": [
          {
            "id": 7432,
            "nodeType": "FunctionDefinition",
            "src": "607:127:77",
            "nodes": [],
            "documentation": {
              "id": 7421,
              "nodeType": "StructuredDocumentation",
              "src": "297:305:77",
              "text": " @notice update diamond facets and optionally execute arbitrary initialization function\n @param facetCuts array of structured Diamond facet update data\n @param target optional target of initialization delegatecall\n @param data optional initialization function call data"
            },
            "functionSelector": "1f931c1c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "diamondCut",
            "nameLocation": "616:10:77",
            "parameters": {
              "id": 7430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7425,
                  "mutability": "mutable",
                  "name": "facetCuts",
                  "nameLocation": "656:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 7432,
                  "src": "636:29:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$7474_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDiamondWritableInternal.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7423,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 7422,
                        "name": "FacetCut",
                        "nameLocations": [
                          "636:8:77"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 7474,
                        "src": "636:8:77"
                      },
                      "referencedDeclaration": 7474,
                      "src": "636:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$7474_storage_ptr",
                        "typeString": "struct IDiamondWritableInternal.FacetCut"
                      }
                    },
                    "id": 7424,
                    "nodeType": "ArrayTypeName",
                    "src": "636:10:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$7474_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamondWritableInternal.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7427,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "683:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 7432,
                  "src": "675:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7429,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "714:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 7432,
                  "src": "699:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:98:77"
            },
            "returnParameters": {
              "id": 7431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:77"
            },
            "scope": 7433,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7419,
              "name": "IDiamondWritableInternal",
              "nameLocations": [
                "266:24:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7475,
              "src": "266:24:77"
            },
            "id": 7420,
            "nodeType": "InheritanceSpecifier",
            "src": "266:24:77"
          }
        ],
        "canonicalName": "IDiamondWritable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7418,
          "nodeType": "StructuredDocumentation",
          "src": "134:101:77",
          "text": " @title Diamond proxy upgrade interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          7433,
          7475
        ],
        "name": "IDiamondWritable",
        "nameLocation": "246:16:77",
        "scope": 7434,
        "usedErrors": [
          7451,
          7453,
          7455,
          7457,
          7459,
          7461,
          7463,
          7465
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 77
}