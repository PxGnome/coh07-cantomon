{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_OPEN",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REVEAL_TIMESTAMP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721A.TokenOwnership",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "explicitOwnershipsOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721A.TokenOwnership[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isOpen",
          "type": "bool"
        }
      ],
      "name": "setMintOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "setRevealTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405267016345785d8a0000600955612710600a55600c805460ff191690553480156200002d57600080fd5b506040516200249538038062002495833981016040819052620000509162000244565b838360026200006083826200036c565b5060036200006f82826200036c565b505060008055506200008133620000a1565b6200008c82620000f3565b62000097816200010f565b5050505062000438565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620000fd6200011e565b600d6200010b82826200036c565b5050565b620001196200011e565b600b55565b6008546001600160a01b031633146200017d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a757600080fd5b81516001600160401b0380821115620001c457620001c46200017f565b604051601f8301601f19908116603f01168101908282118183101715620001ef57620001ef6200017f565b816040528381526020925086838588010111156200020c57600080fd5b600091505b8382101562000230578582018301518183018401529082019062000211565b600093810190920192909252949350505050565b600080600080608085870312156200025b57600080fd5b84516001600160401b03808211156200027357600080fd5b620002818883890162000195565b955060208701519150808211156200029857600080fd5b620002a68883890162000195565b94506040870151915080821115620002bd57600080fd5b50620002cc8782880162000195565b606096909601519497939650505050565b600181811c90821680620002f257607f821691505b6020821081036200031357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036757600081815260208120601f850160051c81016020861015620003425750805b601f850160051c820191505b8181101562000363578281556001016200034e565b5050505b505050565b81516001600160401b038111156200038857620003886200017f565b620003a081620003998454620002dd565b8462000319565b602080601f831160018114620003d85760008415620003bf5750858301515b600019600386901b1c1916600185901b17855562000363565b600085815260208120601f198616915b828110156200040957888601518255948401946001909101908401620003e8565b5085821015620004285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61204d80620004486000396000f3fe6080604052600436106101ee5760003560e01c806370a082311161010d57806399a2557a116100a0578063c87b56dd1161006f578063c87b56dd14610546578063e985e9c514610566578063f2fde38b146105af578063f8004d31146105cf578063fa09e630146105ef57600080fd5b806399a2557a146104c6578063a22cb465146104e6578063b88d4fde14610506578063c23dc68f1461051957600080fd5b80638d859f3e116100dc5780638d859f3e1461045d5780638da5cb5b1461047357806391b7f5ed1461049157806395d89b41146104b157600080fd5b806370a08231146103e6578063714c539814610406578063715018a61461041b5780638462151c1461043057600080fd5b806323b872dd1161018557806349df728c1161015457806349df728c1461035957806355f804b3146103795780635bbb2177146103995780636352211e146103c657600080fd5b806323b872dd1461030a57806332cb6b0c1461031d57806340c10f191461033357806342842e0e1461034657600080fd5b8063088b6943116101c1578063088b6943146102a4578063095ea7b3146102be57806318160ddd146102d157806318e20a38146102f457600080fd5b8063018a2c37146101f357806301ffc9a71461021557806306fdde031461024a578063081812fc1461026c575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046118c3565b61060f565b005b34801561022157600080fd5b506102356102303660046118f2565b61061c565b60405190151581526020015b60405180910390f35b34801561025657600080fd5b5061025f61066e565b604051610241919061195f565b34801561027857600080fd5b5061028c6102873660046118c3565b610700565b6040516001600160a01b039091168152602001610241565b3480156102b057600080fd5b50600c546102359060ff1681565b6102136102cc366004611987565b610744565b3480156102dd57600080fd5b50600154600054035b604051908152602001610241565b34801561030057600080fd5b506102e6600b5481565b6102136103183660046119b3565b6107e4565b34801561032957600080fd5b506102e6600a5481565b610213610341366004611987565b61097d565b6102136103543660046119b3565b610a90565b34801561036557600080fd5b506102136103743660046119f4565b610ab0565b34801561038557600080fd5b50610213610394366004611a9d565b610ba6565b3480156103a557600080fd5b506103b96103b4366004611ae6565b610bba565b6040516102419190611b98565b3480156103d257600080fd5b5061028c6103e13660046118c3565b610c86565b3480156103f257600080fd5b506102e66104013660046119f4565b610c91565b34801561041257600080fd5b5061025f610ce0565b34801561042757600080fd5b50610213610cef565b34801561043c57600080fd5b5061045061044b3660046119f4565b610d03565b6040516102419190611bda565b34801561046957600080fd5b506102e660095481565b34801561047f57600080fd5b506008546001600160a01b031661028c565b34801561049d57600080fd5b506102136104ac3660046118c3565b610e0c565b3480156104bd57600080fd5b5061025f610e19565b3480156104d257600080fd5b506104506104e1366004611c12565b610e28565b3480156104f257600080fd5b50610213610501366004611c55565b610fa2565b610213610514366004611c8e565b61100e565b34801561052557600080fd5b506105396105343660046118c3565b611058565b6040516102419190611d0e565b34801561055257600080fd5b5061025f6105613660046118c3565b6110d0565b34801561057257600080fd5b50610235610581366004611d1c565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156105bb57600080fd5b506102136105ca3660046119f4565b6111f7565b3480156105db57600080fd5b506102136105ea366004611d4a565b611270565b3480156105fb57600080fd5b5061021361060a3660046119f4565b61128b565b61061761132a565b600b55565b60006301ffc9a760e01b6001600160e01b03198316148061064d57506380ac58cd60e01b6001600160e01b03198316145b806106685750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461067d90611d67565b80601f01602080910402602001604051908101604052809291908181526020018280546106a990611d67565b80156106f65780601f106106cb576101008083540402835291602001916106f6565b820191906000526020600020905b8154815290600101906020018083116106d957829003601f168201915b5050505050905090565b600061070b82611384565b610728576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061074f82610c86565b9050336001600160a01b038216146107885761076b8133610581565b610788576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107ef826113ab565b9050836001600160a01b0316816001600160a01b0316146108225760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761086f576108528633610581565b61086f57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661089657604051633a954ecd60e21b815260040160405180910390fd5b80156108a157600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610933576001840160008181526004602052604081205490036109315760005481146109315760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b600c5460ff166109ca5760405162461bcd60e51b815260206004820152601360248201527226b4b73a34b7339034b9903737ba1037b832b760691b60448201526064015b60405180910390fd5b6000811180156109f35750600a54816109e66001546000540390565b6109f09190611da1565b11155b610a305760405162461bcd60e51b815260206004820152600e60248201526d105b5bdd5b9d081a5b9d985b1a5960921b60448201526064016109c1565b600954341015610a825760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f72726563740060448201526064016109c1565b610a8c8282611412565b5050565b610aab8383836040518060200160405280600081525061100e565b505050565b610ab861132a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190611dc2565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190611ddb565b610bae61132a565b600d610a8c8282611e3e565b60608160008167ffffffffffffffff811115610bd857610bd8611a11565b604051908082528060200260200182016040528015610c2a57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610bf65790505b50905060005b828114610c7d57610c58868683818110610c4c57610c4c611efe565b90506020020135611058565b828281518110610c6a57610c6a611efe565b6020908102919091010152600101610c30565b50949350505050565b6000610668826113ab565b60006001600160a01b038216610cba576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600d805461067d90611d67565b610cf761132a565b610d016000611510565b565b60606000806000610d1385610c91565b905060008167ffffffffffffffff811115610d3057610d30611a11565b604051908082528060200260200182016040528015610d59578160200160208202803683370190505b509050610d8660408051608081018252600080825260208201819052918101829052606081019190915290565b60005b838614610e0057610d9981611562565b91508160400151610df85781516001600160a01b031615610db957815194505b876001600160a01b0316856001600160a01b031603610df85780838780600101985081518110610deb57610deb611efe565b6020026020010181815250505b600101610d89565b50909695505050505050565b610e1461132a565b600955565b60606003805461067d90611d67565b6060818310610e4a57604051631960ccad60e11b815260040160405180910390fd5b600080610e5660005490565b905080841115610e64578093505b6000610e6f87610c91565b905084861015610e8e5785850381811015610e88578091505b50610e92565b5060005b60008167ffffffffffffffff811115610ead57610ead611a11565b604051908082528060200260200182016040528015610ed6578160200160208202803683370190505b50905081600003610eec579350610f9b92505050565b6000610ef788611058565b905060008160400151610f08575080515b885b888114158015610f1a5750848714155b15610f8f57610f2881611562565b92508260400151610f875782516001600160a01b031615610f4857825191505b8a6001600160a01b0316826001600160a01b031603610f875780848880600101995081518110610f7a57610f7a611efe565b6020026020010181815250505b600101610f0a565b50505092835250909150505b9392505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6110198484846107e4565b6001600160a01b0383163b15611052576110358484848461159e565b611052576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60408051608080820183526000808352602080840182905283850182905260608085018390528551938401865282845290830182905293820181905292810183905290915060005483106110ac5792915050565b6110b583611562565b90508060400151156110c75792915050565b610f9b8361168a565b60606110db82611384565b6110f857604051630a14c4b560e41b815260040160405180910390fd5b600b5460000361119457600d805461110f90611d67565b80601f016020809104026020016040519081016040528092919081815260200182805461113b90611d67565b80156111885780601f1061115d57610100808354040283529160200191611188565b820191906000526020600020905b81548152906001019060200180831161116b57829003601f168201915b50505050509050919050565b60408051602081019091526000808252600d80546111b190611d67565b9050111561066857600d6111cf6111ca600b54866116bf565b611710565b6040516020016111e0929190611f14565b604051602081830303815290604052905092915050565b6111ff61132a565b6001600160a01b0381166112645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c1565b61126d81611510565b50565b61127861132a565b600c805460ff1916911515919091179055565b61129361132a565b6000816001600160a01b03164760405160006040518083038185875af1925050503d80600081146112e0576040519150601f19603f3d011682016040523d82523d6000602084013e6112e5565b606091505b5050905080610a8c5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b60448201526064016109c1565b6008546001600160a01b03163314610d015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c1565b6000805482108015610668575050600090815260046020526040902054600160e01b161590565b6000816000548110156113f95760008181526004602052604081205490600160e01b821690036113f7575b80600003610f9b5750600019016000818152600460205260409020546113d6565b505b604051636f96cda160e11b815260040160405180910390fd5b60008054908290036114375760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146114e657808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016114ae565b508160000361150757604051622e076360e81b815260040160405180910390fd5b60005550505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516080810182526000808252602082018190529181018290526060810191909152600082815260046020526040902054610668906117a3565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906115d3903390899088908890600401611f9b565b6020604051808303816000875af192505050801561160e575060408051601f3d908101601f1916820190925261160b91810190611fd8565b60015b61166c573d80801561163c576040519150601f19603f3d011682016040523d82523d6000602084013e611641565b606091505b508051600003611664576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6040805160808101825260008082526020820181905291810182905260608101919091526106686116ba836113ab565b6117a3565b6000806116cf6001546000540390565b83856040516020016116e391815260200190565b6040516020818303038152906040528051906020012060001c6117069190611da1565b6116829190611ff5565b6060600061171d836117eb565b600101905060008167ffffffffffffffff81111561173d5761173d611a11565b6040519080825280601f01601f191660200182016040528015611767576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461177157509392505050565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061182a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611856576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061187457662386f26fc10000830492506010015b6305f5e100831061188c576305f5e100830492506008015b61271083106118a057612710830492506004015b606483106118b2576064830492506002015b600a83106106685760010192915050565b6000602082840312156118d557600080fd5b5035919050565b6001600160e01b03198116811461126d57600080fd5b60006020828403121561190457600080fd5b8135610f9b816118dc565b60005b8381101561192a578181015183820152602001611912565b50506000910152565b6000815180845261194b81602086016020860161190f565b601f01601f19169290920160200192915050565b602081526000610f9b6020830184611933565b6001600160a01b038116811461126d57600080fd5b6000806040838503121561199a57600080fd5b82356119a581611972565b946020939093013593505050565b6000806000606084860312156119c857600080fd5b83356119d381611972565b925060208401356119e381611972565b929592945050506040919091013590565b600060208284031215611a0657600080fd5b8135610f9b81611972565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a4257611a42611a11565b604051601f8501601f19908116603f01168101908282118183101715611a6a57611a6a611a11565b81604052809350858152868686011115611a8357600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611aaf57600080fd5b813567ffffffffffffffff811115611ac657600080fd5b8201601f81018413611ad757600080fd5b61168284823560208401611a27565b60008060208385031215611af957600080fd5b823567ffffffffffffffff80821115611b1157600080fd5b818501915085601f830112611b2557600080fd5b813581811115611b3457600080fd5b8660208260051b8501011115611b4957600080fd5b60209290920196919550909350505050565b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b81811015610e0057611bc7838551611b5b565b9284019260809290920191600101611bb4565b6020808252825182820181905260009190848201906040850190845b81811015610e0057835183529284019291840191600101611bf6565b600080600060608486031215611c2757600080fd5b8335611c3281611972565b95602085013595506040909401359392505050565b801515811461126d57600080fd5b60008060408385031215611c6857600080fd5b8235611c7381611972565b91506020830135611c8381611c47565b809150509250929050565b60008060008060808587031215611ca457600080fd5b8435611caf81611972565b93506020850135611cbf81611972565b925060408501359150606085013567ffffffffffffffff811115611ce257600080fd5b8501601f81018713611cf357600080fd5b611d0287823560208401611a27565b91505092959194509250565b608081016106688284611b5b565b60008060408385031215611d2f57600080fd5b8235611d3a81611972565b91506020830135611c8381611972565b600060208284031215611d5c57600080fd5b8135610f9b81611c47565b600181811c90821680611d7b57607f821691505b602082108103611d9b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561066857634e487b7160e01b600052601160045260246000fd5b600060208284031215611dd457600080fd5b5051919050565b600060208284031215611ded57600080fd5b8151610f9b81611c47565b601f821115610aab57600081815260208120601f850160051c81016020861015611e1f5750805b601f850160051c820191505b8181101561097557828155600101611e2b565b815167ffffffffffffffff811115611e5857611e58611a11565b611e6c81611e668454611d67565b84611df8565b602080601f831160018114611ea15760008415611e895750858301515b600019600386901b1c1916600185901b178555610975565b600085815260208120601f198616915b82811015611ed057888601518255948401946001909101908401611eb1565b5085821015611eee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000808454611f2281611d67565b60018281168015611f3a5760018114611f4f57611f7e565b60ff1984168752821515830287019450611f7e565b8860005260208060002060005b85811015611f755781548a820152908401908201611f5c565b50505082870194505b505050508351611f9281836020880161190f565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fce90830184611933565b9695505050505050565b600060208284031215611fea57600080fd5b8151610f9b816118dc565b60008261201257634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220497d044e76e1a51a3ebc923c86a0c6993ee2d3e637e95deafbaedfd4497d122f64736f6c63430008130033",
    "sourceMap": "434:2462:9:-:0;;;572:9;549:32;;615:5;587:33;;684:29;;;-1:-1:-1;;684:29:9;;;740:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;844:5;851:7;5012:5:79;:13;844:5:9;5012::79;:13;:::i;:::-;-1:-1:-1;5035:7:79;:17;5045:7;5035;:17;:::i;:::-;-1:-1:-1;;5482:7:79;5062:31;;-1:-1:-1;936:32:14;719:10:19;936:18:14;:32::i;:::-;870:16:9::1;881:4:::0;870:10:::1;:16::i;:::-;896:30;915:10:::0;896:18:::1;:30::i;:::-;740:193:::0;;;;434:2462;;2433:187:14;2525:6;;;-1:-1:-1;;;;;2541:17:14;;;-1:-1:-1;;;;;;2541:17:14;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1140:88:9:-;1094:13:14;:11;:13::i;:::-;1207:7:9::1;:14;1217:4:::0;1207:7;:14:::1;:::i;:::-;;1140:88:::0;:::o;1328:111::-;1094:13:14;:11;:13::i;:::-;1403:16:9::1;:29:::0;1328:111::o;1359:130:14:-;1273:6;;-1:-1:-1;;;;;1273:6:14;719:10:19;1422:23:14;1414:68;;;;-1:-1:-1;;;1414:68:14;;4615:2:84;1414:68:14;;;4597:21:84;;;4634:18;;;4627:30;4693:34;4673:18;;;4666:62;4745:18;;1414:68:14;;;;;;;;1359:130::o;14:127:84:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:84;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:84;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:84:o;991:828::-;1118:6;1126;1134;1142;1195:3;1183:9;1174:7;1170:23;1166:33;1163:53;;;1212:1;1209;1202:12;1163:53;1239:16;;-1:-1:-1;;;;;1304:14:84;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;1638:2;1627:9;1623:18;1617:25;1601:41;;1667:2;1657:8;1654:16;1651:36;;;1683:1;1680;1673:12;1651:36;;1706:63;1761:7;1750:8;1739:9;1735:24;1706:63;:::i;:::-;1809:2;1794:18;;;;1788:25;991:828;;;;-1:-1:-1;;;;991:828:84:o;1824:380::-;1903:1;1899:12;;;;1946;;;1967:61;;2021:4;2013:6;2009:17;1999:27;;1967:61;2074:2;2066:6;2063:14;2043:18;2040:38;2037:161;;2120:10;2115:3;2111:20;2108:1;2101:31;2155:4;2152:1;2145:15;2183:4;2180:1;2173:15;2037:161;;1824:380;;;:::o;2335:545::-;2437:2;2432:3;2429:11;2426:448;;;2473:1;2498:5;2494:2;2487:17;2543:4;2539:2;2529:19;2613:2;2601:10;2597:19;2594:1;2590:27;2584:4;2580:38;2649:4;2637:10;2634:20;2631:47;;;-1:-1:-1;2672:4:84;2631:47;2727:2;2722:3;2718:12;2715:1;2711:20;2705:4;2701:31;2691:41;;2782:82;2800:2;2793:5;2790:13;2782:82;;;2845:17;;;2826:1;2815:13;2782:82;;;2786:3;;;2426:448;2335:545;;;:::o;3056:1352::-;3176:10;;-1:-1:-1;;;;;3198:30:84;;3195:56;;;3231:18;;:::i;:::-;3260:97;3350:6;3310:38;3342:4;3336:11;3310:38;:::i;:::-;3304:4;3260:97;:::i;:::-;3412:4;;3476:2;3465:14;;3493:1;3488:663;;;;4195:1;4212:6;4209:89;;;-1:-1:-1;4264:19:84;;;4258:26;4209:89;-1:-1:-1;;3013:1:84;3009:11;;;3005:24;3001:29;2991:40;3037:1;3033:11;;;2988:57;4311:81;;3458:944;;3488:663;2282:1;2275:14;;;2319:4;2306:18;;-1:-1:-1;;3524:20:84;;;3642:236;3656:7;3653:1;3650:14;3642:236;;;3745:19;;;3739:26;3724:42;;3837:27;;;;3805:1;3793:14;;;;3672:19;;3642:236;;;3646:3;3906:6;3897:7;3894:19;3891:201;;;3967:19;;;3961:26;-1:-1:-1;;4050:1:84;4046:14;;;4062:3;4042:24;4038:37;4034:42;4019:58;4004:74;;3891:201;-1:-1:-1;;;;;4138:1:84;4122:14;;;4118:22;4105:36;;-1:-1:-1;3056:1352:84:o;4413:356::-;434:2462:9;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101ee5760003560e01c806370a082311161010d57806399a2557a116100a0578063c87b56dd1161006f578063c87b56dd14610546578063e985e9c514610566578063f2fde38b146105af578063f8004d31146105cf578063fa09e630146105ef57600080fd5b806399a2557a146104c6578063a22cb465146104e6578063b88d4fde14610506578063c23dc68f1461051957600080fd5b80638d859f3e116100dc5780638d859f3e1461045d5780638da5cb5b1461047357806391b7f5ed1461049157806395d89b41146104b157600080fd5b806370a08231146103e6578063714c539814610406578063715018a61461041b5780638462151c1461043057600080fd5b806323b872dd1161018557806349df728c1161015457806349df728c1461035957806355f804b3146103795780635bbb2177146103995780636352211e146103c657600080fd5b806323b872dd1461030a57806332cb6b0c1461031d57806340c10f191461033357806342842e0e1461034657600080fd5b8063088b6943116101c1578063088b6943146102a4578063095ea7b3146102be57806318160ddd146102d157806318e20a38146102f457600080fd5b8063018a2c37146101f357806301ffc9a71461021557806306fdde031461024a578063081812fc1461026c575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046118c3565b61060f565b005b34801561022157600080fd5b506102356102303660046118f2565b61061c565b60405190151581526020015b60405180910390f35b34801561025657600080fd5b5061025f61066e565b604051610241919061195f565b34801561027857600080fd5b5061028c6102873660046118c3565b610700565b6040516001600160a01b039091168152602001610241565b3480156102b057600080fd5b50600c546102359060ff1681565b6102136102cc366004611987565b610744565b3480156102dd57600080fd5b50600154600054035b604051908152602001610241565b34801561030057600080fd5b506102e6600b5481565b6102136103183660046119b3565b6107e4565b34801561032957600080fd5b506102e6600a5481565b610213610341366004611987565b61097d565b6102136103543660046119b3565b610a90565b34801561036557600080fd5b506102136103743660046119f4565b610ab0565b34801561038557600080fd5b50610213610394366004611a9d565b610ba6565b3480156103a557600080fd5b506103b96103b4366004611ae6565b610bba565b6040516102419190611b98565b3480156103d257600080fd5b5061028c6103e13660046118c3565b610c86565b3480156103f257600080fd5b506102e66104013660046119f4565b610c91565b34801561041257600080fd5b5061025f610ce0565b34801561042757600080fd5b50610213610cef565b34801561043c57600080fd5b5061045061044b3660046119f4565b610d03565b6040516102419190611bda565b34801561046957600080fd5b506102e660095481565b34801561047f57600080fd5b506008546001600160a01b031661028c565b34801561049d57600080fd5b506102136104ac3660046118c3565b610e0c565b3480156104bd57600080fd5b5061025f610e19565b3480156104d257600080fd5b506104506104e1366004611c12565b610e28565b3480156104f257600080fd5b50610213610501366004611c55565b610fa2565b610213610514366004611c8e565b61100e565b34801561052557600080fd5b506105396105343660046118c3565b611058565b6040516102419190611d0e565b34801561055257600080fd5b5061025f6105613660046118c3565b6110d0565b34801561057257600080fd5b50610235610581366004611d1c565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156105bb57600080fd5b506102136105ca3660046119f4565b6111f7565b3480156105db57600080fd5b506102136105ea366004611d4a565b611270565b3480156105fb57600080fd5b5061021361060a3660046119f4565b61128b565b61061761132a565b600b55565b60006301ffc9a760e01b6001600160e01b03198316148061064d57506380ac58cd60e01b6001600160e01b03198316145b806106685750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461067d90611d67565b80601f01602080910402602001604051908101604052809291908181526020018280546106a990611d67565b80156106f65780601f106106cb576101008083540402835291602001916106f6565b820191906000526020600020905b8154815290600101906020018083116106d957829003601f168201915b5050505050905090565b600061070b82611384565b610728576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061074f82610c86565b9050336001600160a01b038216146107885761076b8133610581565b610788576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107ef826113ab565b9050836001600160a01b0316816001600160a01b0316146108225760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761086f576108528633610581565b61086f57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661089657604051633a954ecd60e21b815260040160405180910390fd5b80156108a157600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610933576001840160008181526004602052604081205490036109315760005481146109315760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b600c5460ff166109ca5760405162461bcd60e51b815260206004820152601360248201527226b4b73a34b7339034b9903737ba1037b832b760691b60448201526064015b60405180910390fd5b6000811180156109f35750600a54816109e66001546000540390565b6109f09190611da1565b11155b610a305760405162461bcd60e51b815260206004820152600e60248201526d105b5bdd5b9d081a5b9d985b1a5960921b60448201526064016109c1565b600954341015610a825760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f72726563740060448201526064016109c1565b610a8c8282611412565b5050565b610aab8383836040518060200160405280600081525061100e565b505050565b610ab861132a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190611dc2565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190611ddb565b610bae61132a565b600d610a8c8282611e3e565b60608160008167ffffffffffffffff811115610bd857610bd8611a11565b604051908082528060200260200182016040528015610c2a57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610bf65790505b50905060005b828114610c7d57610c58868683818110610c4c57610c4c611efe565b90506020020135611058565b828281518110610c6a57610c6a611efe565b6020908102919091010152600101610c30565b50949350505050565b6000610668826113ab565b60006001600160a01b038216610cba576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600d805461067d90611d67565b610cf761132a565b610d016000611510565b565b60606000806000610d1385610c91565b905060008167ffffffffffffffff811115610d3057610d30611a11565b604051908082528060200260200182016040528015610d59578160200160208202803683370190505b509050610d8660408051608081018252600080825260208201819052918101829052606081019190915290565b60005b838614610e0057610d9981611562565b91508160400151610df85781516001600160a01b031615610db957815194505b876001600160a01b0316856001600160a01b031603610df85780838780600101985081518110610deb57610deb611efe565b6020026020010181815250505b600101610d89565b50909695505050505050565b610e1461132a565b600955565b60606003805461067d90611d67565b6060818310610e4a57604051631960ccad60e11b815260040160405180910390fd5b600080610e5660005490565b905080841115610e64578093505b6000610e6f87610c91565b905084861015610e8e5785850381811015610e88578091505b50610e92565b5060005b60008167ffffffffffffffff811115610ead57610ead611a11565b604051908082528060200260200182016040528015610ed6578160200160208202803683370190505b50905081600003610eec579350610f9b92505050565b6000610ef788611058565b905060008160400151610f08575080515b885b888114158015610f1a5750848714155b15610f8f57610f2881611562565b92508260400151610f875782516001600160a01b031615610f4857825191505b8a6001600160a01b0316826001600160a01b031603610f875780848880600101995081518110610f7a57610f7a611efe565b6020026020010181815250505b600101610f0a565b50505092835250909150505b9392505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6110198484846107e4565b6001600160a01b0383163b15611052576110358484848461159e565b611052576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60408051608080820183526000808352602080840182905283850182905260608085018390528551938401865282845290830182905293820181905292810183905290915060005483106110ac5792915050565b6110b583611562565b90508060400151156110c75792915050565b610f9b8361168a565b60606110db82611384565b6110f857604051630a14c4b560e41b815260040160405180910390fd5b600b5460000361119457600d805461110f90611d67565b80601f016020809104026020016040519081016040528092919081815260200182805461113b90611d67565b80156111885780601f1061115d57610100808354040283529160200191611188565b820191906000526020600020905b81548152906001019060200180831161116b57829003601f168201915b50505050509050919050565b60408051602081019091526000808252600d80546111b190611d67565b9050111561066857600d6111cf6111ca600b54866116bf565b611710565b6040516020016111e0929190611f14565b604051602081830303815290604052905092915050565b6111ff61132a565b6001600160a01b0381166112645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c1565b61126d81611510565b50565b61127861132a565b600c805460ff1916911515919091179055565b61129361132a565b6000816001600160a01b03164760405160006040518083038185875af1925050503d80600081146112e0576040519150601f19603f3d011682016040523d82523d6000602084013e6112e5565b606091505b5050905080610a8c5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b60448201526064016109c1565b6008546001600160a01b03163314610d015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c1565b6000805482108015610668575050600090815260046020526040902054600160e01b161590565b6000816000548110156113f95760008181526004602052604081205490600160e01b821690036113f7575b80600003610f9b5750600019016000818152600460205260409020546113d6565b505b604051636f96cda160e11b815260040160405180910390fd5b60008054908290036114375760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146114e657808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016114ae565b508160000361150757604051622e076360e81b815260040160405180910390fd5b60005550505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516080810182526000808252602082018190529181018290526060810191909152600082815260046020526040902054610668906117a3565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906115d3903390899088908890600401611f9b565b6020604051808303816000875af192505050801561160e575060408051601f3d908101601f1916820190925261160b91810190611fd8565b60015b61166c573d80801561163c576040519150601f19603f3d011682016040523d82523d6000602084013e611641565b606091505b508051600003611664576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6040805160808101825260008082526020820181905291810182905260608101919091526106686116ba836113ab565b6117a3565b6000806116cf6001546000540390565b83856040516020016116e391815260200190565b6040516020818303038152906040528051906020012060001c6117069190611da1565b6116829190611ff5565b6060600061171d836117eb565b600101905060008167ffffffffffffffff81111561173d5761173d611a11565b6040519080825280601f01601f191660200182016040528015611767576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461177157509392505050565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061182a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611856576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061187457662386f26fc10000830492506010015b6305f5e100831061188c576305f5e100830492506008015b61271083106118a057612710830492506004015b606483106118b2576064830492506002015b600a83106106685760010192915050565b6000602082840312156118d557600080fd5b5035919050565b6001600160e01b03198116811461126d57600080fd5b60006020828403121561190457600080fd5b8135610f9b816118dc565b60005b8381101561192a578181015183820152602001611912565b50506000910152565b6000815180845261194b81602086016020860161190f565b601f01601f19169290920160200192915050565b602081526000610f9b6020830184611933565b6001600160a01b038116811461126d57600080fd5b6000806040838503121561199a57600080fd5b82356119a581611972565b946020939093013593505050565b6000806000606084860312156119c857600080fd5b83356119d381611972565b925060208401356119e381611972565b929592945050506040919091013590565b600060208284031215611a0657600080fd5b8135610f9b81611972565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a4257611a42611a11565b604051601f8501601f19908116603f01168101908282118183101715611a6a57611a6a611a11565b81604052809350858152868686011115611a8357600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611aaf57600080fd5b813567ffffffffffffffff811115611ac657600080fd5b8201601f81018413611ad757600080fd5b61168284823560208401611a27565b60008060208385031215611af957600080fd5b823567ffffffffffffffff80821115611b1157600080fd5b818501915085601f830112611b2557600080fd5b813581811115611b3457600080fd5b8660208260051b8501011115611b4957600080fd5b60209290920196919550909350505050565b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b81811015610e0057611bc7838551611b5b565b9284019260809290920191600101611bb4565b6020808252825182820181905260009190848201906040850190845b81811015610e0057835183529284019291840191600101611bf6565b600080600060608486031215611c2757600080fd5b8335611c3281611972565b95602085013595506040909401359392505050565b801515811461126d57600080fd5b60008060408385031215611c6857600080fd5b8235611c7381611972565b91506020830135611c8381611c47565b809150509250929050565b60008060008060808587031215611ca457600080fd5b8435611caf81611972565b93506020850135611cbf81611972565b925060408501359150606085013567ffffffffffffffff811115611ce257600080fd5b8501601f81018713611cf357600080fd5b611d0287823560208401611a27565b91505092959194509250565b608081016106688284611b5b565b60008060408385031215611d2f57600080fd5b8235611d3a81611972565b91506020830135611c8381611972565b600060208284031215611d5c57600080fd5b8135610f9b81611c47565b600181811c90821680611d7b57607f821691505b602082108103611d9b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561066857634e487b7160e01b600052601160045260246000fd5b600060208284031215611dd457600080fd5b5051919050565b600060208284031215611ded57600080fd5b8151610f9b81611c47565b601f821115610aab57600081815260208120601f850160051c81016020861015611e1f5750805b601f850160051c820191505b8181101561097557828155600101611e2b565b815167ffffffffffffffff811115611e5857611e58611a11565b611e6c81611e668454611d67565b84611df8565b602080601f831160018114611ea15760008415611e895750858301515b600019600386901b1c1916600185901b178555610975565b600085815260208120601f198616915b82811015611ed057888601518255948401946001909101908401611eb1565b5085821015611eee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000808454611f2281611d67565b60018281168015611f3a5760018114611f4f57611f7e565b60ff1984168752821515830287019450611f7e565b8860005260208060002060005b85811015611f755781548a820152908401908201611f5c565b50505082870194505b505050508351611f9281836020880161190f565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fce90830184611933565b9695505050505050565b600060208284031215611fea57600080fd5b8151610f9b816118dc565b60008261201257634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220497d044e76e1a51a3ebc923c86a0c6993ee2d3e637e95deafbaedfd4497d122f64736f6c63430008130033",
    "sourceMap": "434:2462:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:111;;;;;;;;;;-1:-1:-1;1328:111:9;;;;;:::i;:::-;;:::i;:::-;;9155:630:79;;;;;;;;;;-1:-1:-1;9155:630:79;;;;;:::i;:::-;;:::i;:::-;;;750:14:84;;743:22;725:41;;713:2;698:18;9155:630:79;;;;;;;;10039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16360:214::-;;;;;;;;;;-1:-1:-1;16360:214:79;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:84;;;1679:51;;1667:2;1652:18;16360:214:79;1533:203:84;684:29:9;;;;;;;;;;-1:-1:-1;684:29:9;;;;;;;;15812:398:79;;;;;;:::i;:::-;;:::i;5894:317::-;;;;;;;;;;-1:-1:-1;6164:12:79;;5955:7;6148:13;:28;5894:317;;;2343:25:84;;;2331:2;2316:18;5894:317:79;2197:177:84;626:31:9;;;;;;;;;;;;;;;;19903:2764:79;;;;;;:::i;:::-;;:::i;587:33:9:-;;;;;;;;;;;;;;;;1542:307;;;;;;:::i;:::-;;:::i;22758:187:79:-;;;;;;:::i;:::-;;:::i;2727:167:9:-;;;;;;;;;;-1:-1:-1;2727:167:9;;;;;:::i;:::-;;:::i;1140:88::-;;;;;;;;;;-1:-1:-1;1140:88:9;;;;;:::i;:::-;;:::i;1641:513:81:-;;;;;;;;;;-1:-1:-1;1641:513:81;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11391:150:79:-;;;;;;;;;;-1:-1:-1;11391:150:79;;;;;:::i;:::-;;:::i;7045:230::-;;;;;;;;;;-1:-1:-1;7045:230:79;;;;;:::i;:::-;;:::i;1043:91:9:-;;;;;;;;;;;;;:::i;1831:101:14:-;;;;;;;;;;;;;:::i;5417:879:81:-;;;;;;;;;;-1:-1:-1;5417:879:81;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;549:32:9:-;;;;;;;;;;;;;;;;1201:85:14;;;;;;;;;;-1:-1:-1;1273:6:14;;-1:-1:-1;;;;;1273:6:14;1201:85;;1446:90:9;;;;;;;;;;-1:-1:-1;1446:90:9;;;;;:::i;:::-;;:::i;10208:102:79:-;;;;;;;;;;;;;:::i;2528:2454:81:-;;;;;;;;;;-1:-1:-1;2528:2454:81;;;;;:::i;:::-;;:::i;16901:231:79:-;;;;;;;;;;-1:-1:-1;16901:231:79;;;;;:::i;:::-;;:::i;23526:396::-;;;;;;:::i;:::-;;:::i;1070:418:81:-;;;;;;;;;;-1:-1:-1;1070:418:81;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2088:449:9:-;;;;;;;;;;-1:-1:-1;2088:449:9;;;;;:::i;:::-;;:::i;17282:162:79:-;;;;;;;;;;-1:-1:-1;17282:162:79;;;;;:::i;:::-;-1:-1:-1;;;;;17402:25:79;;;17379:4;17402:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17282:162;2081:198:14;;;;;;;;;;-1:-1:-1;2081:198:14;;;;;:::i;:::-;;:::i;1234:88:9:-;;;;;;;;;;-1:-1:-1;1234:88:9;;;;;:::i;:::-;;:::i;2543:178::-;;;;;;;;;;-1:-1:-1;2543:178:9;;;;;:::i;:::-;;:::i;1328:111::-;1094:13:14;:11;:13::i;:::-;1403:16:9::1;:29:::0;1328:111::o;9155:630:79:-;9240:4;-1:-1:-1;;;;;;;;;9558:25:79;;;;:101;;-1:-1:-1;;;;;;;;;;9634:25:79;;;9558:101;:177;;;-1:-1:-1;;;;;;;;;;9710:25:79;;;9558:177;9539:196;9155:630;-1:-1:-1;;9155:630:79:o;10039:98::-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;-1:-1:-1;;;16485:34:79;;;;;;;;;;;16455:64;-1:-1:-1;16537:24:79;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16537:30:79;;16360:214::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;-1:-1:-1;39523:10:79;-1:-1:-1;;;;;15947:28:79;;;15943:172;;15994:44;16011:5;39523:10;17282:162;:::i;15994:44::-;15989:126;;16065:35;;-1:-1:-1;;;16065:35:79;;;;;;;;;;;15989:126;16125:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16125:35:79;-1:-1:-1;;;;;16125:35:79;;;;;;;;;16175:28;;16125:24;;16175:28;;;;;;;15890:320;15812:398;;:::o;19903:2764::-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;-1:-1:-1;;;;;20112:45:79;20128:19;-1:-1:-1;;;;;20112:45:79;;20108:86;;20166:28;;-1:-1:-1;;;20166:28:79;;;;;;;;;;;20108:86;20206:27;19036:24;;;:15;:24;;;;;19260:26;;39523:10;18673:30;;;-1:-1:-1;;;;;18370:28:79;;18651:20;;;18648:56;20389:179;;20481:43;20498:4;39523:10;17282:162;:::i;20481:43::-;20476:92;;20533:35;;-1:-1:-1;;;20533:35:79;;;;;;;;;;;20476:92;-1:-1:-1;;;;;20583:16:79;;20579:52;;20608:23;;-1:-1:-1;;;20608:23:79;;;;;;;;;;;20579:52;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;-1:-1:-1;;;;;21300:24:79;;;;;;;:18;:24;;;;;;21298:26;;-1:-1:-1;;21298:26:79;;;21368:22;;;;;;;;;21366:24;;-1:-1:-1;21366:24:79;;;14703:11;14678:23;14674:41;14661:63;-1:-1:-1;;;14661:63:79;21654:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;21943:47:79;;:52;;21939:617;;22047:1;22037:11;;22015:19;22168:30;;;:17;:30;;;;;;:35;;22164:378;;22304:13;;22289:11;:28;22285:239;;22449:30;;;;:17;:30;;;;;:52;;;22285:239;21997:559;21939:617;22600:7;22596:2;-1:-1:-1;;;;;22581:27:79;22590:4;-1:-1:-1;;;;;22581:27:79;;;;;;;;;;;22618:42;20030:2637;;;19903:2764;;;:::o;1542:307:9:-;1619:9;;;;1611:41;;;;-1:-1:-1;;;1611:41:9;;10125:2:84;1611:41:9;;;10107:21:84;10164:2;10144:18;;;10137:30;-1:-1:-1;;;10183:18:84;;;10176:49;10242:18;;1611:41:9;;;;;;;;;1680:1;1670:7;:11;:52;;;;;1712:10;;1701:7;1685:13;6164:12:79;;5955:7;6148:13;:28;;5894:317;1685:13:9;:23;;;;:::i;:::-;:37;;1670:52;1662:79;;;;-1:-1:-1;;;1662:79:9;;10700:2:84;1662:79:9;;;10682:21:84;10739:2;10719:18;;;10712:30;-1:-1:-1;;;10758:18:84;;;10751:44;10812:18;;1662:79:9;10498:338:84;1662:79:9;1772:5;;1759:9;:18;;1751:62;;;;-1:-1:-1;;;1751:62:9;;11043:2:84;1751:62:9;;;11025:21:84;11082:2;11062:18;;;11055:30;11121:33;11101:18;;;11094:61;11172:18;;1751:62:9;10841:355:84;1751:62:9;1823:19;1829:3;1834:7;1823:5;:19::i;:::-;1542:307;;:::o;22758:187:79:-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;2727:167:9:-;1094:13:14;:11;:13::i;:::-;2810:30:9::1;::::0;-1:-1:-1;;;2810:30:9;;2834:4:::1;2810:30;::::0;::::1;1679:51:84::0;2792:15:9::1;::::0;-1:-1:-1;;;;;2810:15:9;::::1;::::0;::::1;::::0;1652:18:84;;2810:30:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2792:48:::0;-1:-1:-1;;;;;;2850:14:9;::::1;;39523:10:79::0;2850:37:9::1;::::0;-1:-1:-1;;;;;;2850:37:9::1;::::0;;;;;;-1:-1:-1;;;;;11582:32:84;;;2850:37:9::1;::::0;::::1;11564:51:84::0;11631:18;;;11624:34;;;11537:18;;2850:37:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1140:88::-:0;1094:13:14;:11;:13::i;:::-;1207:7:9::1;:14;1217:4:::0;1207:7;:14:::1;:::i;1641:513:81:-:0;1780:23;1868:8;1843:22;1868:8;1934:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:36:81;;-1:-1:-1;;1934:36:81;;;;;;;;;;;;1897:73;;1989:9;1984:123;2005:14;2000:1;:19;1984:123;;2060:32;2080:8;;2089:1;2080:11;;;;;;;:::i;:::-;;;;;;;2060:19;:32::i;:::-;2044:10;2055:1;2044:13;;;;;;;;:::i;:::-;;;;;;;;;;:48;2021:3;;1984:123;;;-1:-1:-1;2127:10:81;1641:513;-1:-1:-1;;;;1641:513:81:o;11391:150:79:-;11463:7;11505:27;11524:7;11505:18;:27::i;7045:230::-;7117:7;-1:-1:-1;;;;;7140:19:79;;7136:60;;7168:28;;-1:-1:-1;;;7168:28:79;;;;;;;;;;;7136:60;-1:-1:-1;;;;;;7213:25:79;;;;;:18;:25;;;;;;1360:13;7213:55;;7045:230::o;1043:91:9:-;1088:13;1120:7;1113:14;;;;;:::i;1831:101:14:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5417:879:81:-;5495:16;5547:19;5580:25;5619:22;5644:16;5654:5;5644:9;:16::i;:::-;5619:41;;5674:25;5716:14;5702:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5702:29:81;;5674:57;;5745:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5745:31:81;5795:9;5790:461;5839:14;5824:11;:29;5790:461;;5890:15;5903:1;5890:12;:15::i;:::-;5878:27;;5927:9;:16;;;5967:8;5923:71;6015:14;;-1:-1:-1;;;;;6015:28:81;;6011:109;;6087:14;;;-1:-1:-1;6011:109:81;6162:5;-1:-1:-1;;;;;6141:26:81;:17;-1:-1:-1;;;;;6141:26:81;;6137:100;;6217:1;6191:8;6200:13;;;;;;6191:23;;;;;;;;:::i;:::-;;;;;;:27;;;;;6137:100;5855:3;;5790:461;;;-1:-1:-1;6271:8:81;;5417:879;-1:-1:-1;;;;;;5417:879:81:o;1446:90:9:-;1094:13:14;:11;:13::i;:::-;1512:5:9::1;:17:::0;1446:90::o;10208:102:79:-;10264:13;10296:7;10289:14;;;;;:::i;2528:2454:81:-;2667:16;2732:4;2723:5;:13;2719:45;;2745:19;;-1:-1:-1;;;2745:19:81;;;;;;;;;;;2719:45;2778:19;2811:17;2831:14;5645:7:79;5671:13;;5590:101;2831:14:81;2811:34;-1:-1:-1;3076:9:81;3069:4;:16;3065:71;;;3112:9;3105:16;;3065:71;3149:25;3177:16;3187:5;3177:9;:16::i;:::-;3149:44;;3368:4;3360:5;:12;3356:271;;;3414:12;;;3448:31;;;3444:109;;;3523:11;3503:31;;3444:109;3374:193;3356:271;;;-1:-1:-1;3611:1:81;3356:271;3640:25;3682:17;3668:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3668:32:81;;3640:60;;3718:17;3739:1;3718:22;3714:76;;3767:8;-1:-1:-1;3760:15:81;;-1:-1:-1;;;3760:15:81;3714:76;3931:31;3965:26;3985:5;3965:19;:26::i;:::-;3931:60;;4005:25;4247:9;:16;;;4242:90;;-1:-1:-1;4303:14:81;;4242:90;4362:5;4345:467;4374:4;4369:1;:9;;:45;;;;;4397:17;4382:11;:32;;4369:45;4345:467;;;4451:15;4464:1;4451:12;:15::i;:::-;4439:27;;4488:9;:16;;;4528:8;4484:71;4576:14;;-1:-1:-1;;;;;4576:28:81;;4572:109;;4648:14;;;-1:-1:-1;4572:109:81;4723:5;-1:-1:-1;;;;;4702:26:81;:17;-1:-1:-1;;;;;4702:26:81;;4698:100;;4778:1;4752:8;4761:13;;;;;;4752:23;;;;;;;;:::i;:::-;;;;;;:27;;;;;4698:100;4416:3;;4345:467;;;-1:-1:-1;;;4894:29:81;;;-1:-1:-1;4901:8:81;;-1:-1:-1;;2528:2454:81;;;;;;:::o;16901:231:79:-;39523:10;16995:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;16995:49:79;;;;;;;;;;;;:60;;-1:-1:-1;;16995:60:79;;;;;;;;;;17070:55;;725:41:84;;;16995:49:79;;39523:10;17070:55;;698:18:84;17070:55:79;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;-1:-1:-1;;;;;23740:14:79;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;-1:-1:-1;;;23861:40:79;;;;;;;;;;;23773:143;23526:396;;;;:::o;1070:418:81:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5645:7:79;5671:13;1261:7:81;:25;1228:101;;1309:9;1070:418;-1:-1:-1;;1070:418:81:o;1228:101::-;1350:21;1363:7;1350:12;:21::i;:::-;1338:33;;1385:9;:16;;;1381:63;;;1424:9;1070:418;-1:-1:-1;;1070:418:81:o;1381:63::-;1460:21;1473:7;1460:12;:21::i;2088:449:9:-;2172:13;2202:16;2210:7;2202;:16::i;:::-;2197:59;;2227:29;;-1:-1:-1;;;2227:29:9;;;;;;;;;;;2197:59;2271:16;;2291:1;2271:21;2267:41;;2301:7;2294:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:449;;;:::o;2267:41::-;2319:28;;;;;;;;;:23;:28;;;2367:7;2361:21;;;;;:::i;:::-;;;:25;2357:148;;;2438:7;2447:45;:34;2455:16;;2473:7;2447;:34::i;:::-;:43;:45::i;:::-;2421:72;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2402:92;;2521:9;2088:449;-1:-1:-1;;2088:449:9:o;2081:198:14:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:14;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:14;;15482:2:84;2161:73:14::1;::::0;::::1;15464:21:84::0;15521:2;15501:18;;;15494:30;15560:34;15540:18;;;15533:62;-1:-1:-1;;;15611:18:84;;;15604:36;15657:19;;2161:73:14::1;15280:402:84::0;2161:73:14::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1234:88:9:-;1094:13:14;:11;:13::i;:::-;1296:9:9::1;:19:::0;;-1:-1:-1;;1296:19:9::1;::::0;::::1;;::::0;;;::::1;::::0;;1234:88::o;2543:178::-;1094:13:14;:11;:13::i;:::-;2605:12:9::1;2623:3;-1:-1:-1::0;;;;;2623:8:9::1;2640:21;2623:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2604:63;;;2685:7;2677:37;;;::::0;-1:-1:-1;;;2677:37:9;;16099:2:84;2677:37:9::1;::::0;::::1;16081:21:84::0;16138:2;16118:18;;;16111:30;-1:-1:-1;;;16157:18:84;;;16150:47;16214:18;;2677:37:9::1;15897:341:84::0;1359:130:14;1273:6;;-1:-1:-1;;;;;1273:6:14;39523:10:79;1422:23:14;1414:68;;;;-1:-1:-1;;;1414:68:14;;16445:2:84;1414:68:14;;;16427:21:84;;;16464:18;;;16457:30;16523:34;16503:18;;;16496:62;16575:18;;1414:68:14;16243:356:84;17693:277:79;17758:4;17845:13;;17835:7;:23;17793:151;;;;-1:-1:-1;;17895:26:79;;;;:17;:26;;;;;;-1:-1:-1;;;17895:44:79;:49;;17693:277::o;12515:1249::-;12582:7;12616;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:23;;;:17;:23;;;;;;;-1:-1:-1;;;12855:24:79;;:29;;12851:831;;13510:111;13517:6;13527:1;13517:11;13510:111;;-1:-1:-1;;;13587:6:79;13569:25;;;;:17;:25;;;;;;13510:111;;12851:831;12729:971;12703:997;13726:31;;-1:-1:-1;;;13726:31:79;;;;;;;;;;;27091:2902;27163:20;27186:13;;;27213;;;27209:44;;27235:18;;-1:-1:-1;;;27235:18:79;;;;;;;;;;;27209:44;-1:-1:-1;;;;;27728:22:79;;;;;;:18;:22;;;;1495:2;27728:22;;;:71;;27766:32;27754:45;;27728:71;;;28035:31;;;:17;:31;;;;;-1:-1:-1;15123:15:79;;15097:24;15093:46;14703:11;14678:23;14674:41;14671:52;14661:63;;28035:170;;28264:23;;;;28035:31;;27728:22;;29016:25;27728:22;;28872:328;29520:1;29506:12;29502:20;29461:339;29560:3;29551:7;29548:16;29461:339;;29774:7;29764:8;29761:1;29734:25;29731:1;29728;29723:59;29612:1;29599:15;29461:339;;;29465:75;29831:8;29843:1;29831:13;29827:45;;29853:19;;-1:-1:-1;;;29853:19:79;;;;;;;;;;;29827:45;29887:13;:19;-1:-1:-1;22758:187:79;;;:::o;2433::14:-;2525:6;;;-1:-1:-1;;;;;2541:17:14;;;-1:-1:-1;;;;;;2541:17:14;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;11979:159:79:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12106:24:79;;;;:17;:24;;;;;;12087:44;;:18;:44::i;25948:697::-;26126:88;;-1:-1:-1;;;26126:88:79;;26106:4;;-1:-1:-1;;;;;26126:45:79;;;;;:88;;39523:10;;26193:4;;26199:7;;26208:5;;26126:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26126:88:79;;;;;;;;-1:-1:-1;;26126:88:79;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26404:6;:13;26421:1;26404:18;26400:229;;26449:40;;-1:-1:-1;;;26449:40:79;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;-1:-1:-1;;;;;;26282:64:79;-1:-1:-1;;;26282:64:79;;-1:-1:-1;26122:517:79;25948:697;;;;;;:::o;11724:164::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11834:47:79;11853:27;11872:7;11853:18;:27::i;:::-;11834:18;:47::i;1855:227:9:-;1931:7;1950:18;2034:13;6164:12:79;;5955:7;6148:13;:28;;5894:317;2034:13:9;2022:7;2007:9;1990:27;;;;;;17481:19:84;;17525:2;17516:12;;17352:182;1990:27:9;;;;;;;;;;;;;1980:38;;;;;;1972:47;;:57;;;;:::i;:::-;1971:77;;;;:::i;415:696:20:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:20;-1:-1:-1;572:41:20;-1:-1:-1;733:28:20;;;749:2;733:28;788:280;-1:-1:-1;;819:5:20;-1:-1:-1;;;953:2:20;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:20;788:280;1032:21;-1:-1:-1;1088:6:20;415:696;-1:-1:-1;;;415:696:20:o;13858:361:79:-;-1:-1:-1;;;;;;;;;;;;;13967:41:79;;;;2004:3;14052:33;;;14018:68;;-1:-1:-1;;;14018:68:79;-1:-1:-1;;;14115:24:79;;:29;;-1:-1:-1;;;14096:48:79;;;;2513:3;14183:28;;;;-1:-1:-1;;;14154:58:79;-1:-1:-1;13858:361:79:o;9889:890:22:-;9942:7;;-1:-1:-1;;;10017:15:22;;10013:99;;-1:-1:-1;;;10052:15:22;;;-1:-1:-1;10095:2:22;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:22;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:22;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:22;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:22;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:22;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:22:o;14:180:84:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:84;;14:180;-1:-1:-1;14:180:84:o;199:131::-;-1:-1:-1;;;;;;273:32:84;;263:43;;253:71;;320:1;317;310:12;335:245;393:6;446:2;434:9;425:7;421:23;417:32;414:52;;;462:1;459;452:12;414:52;501:9;488:23;520:30;544:5;520:30;:::i;777:250::-;862:1;872:113;886:6;883:1;880:13;872:113;;;962:11;;;956:18;943:11;;;936:39;908:2;901:10;872:113;;;-1:-1:-1;;1019:1:84;1001:16;;994:27;777:250::o;1032:271::-;1074:3;1112:5;1106:12;1139:6;1134:3;1127:19;1155:76;1224:6;1217:4;1212:3;1208:14;1201:4;1194:5;1190:16;1155:76;:::i;:::-;1285:2;1264:15;-1:-1:-1;;1260:29:84;1251:39;;;;1292:4;1247:50;;1032:271;-1:-1:-1;;1032:271:84:o;1308:220::-;1457:2;1446:9;1439:21;1420:4;1477:45;1518:2;1507:9;1503:18;1495:6;1477:45;:::i;1741:131::-;-1:-1:-1;;;;;1816:31:84;;1806:42;;1796:70;;1862:1;1859;1852:12;1877:315;1945:6;1953;2006:2;1994:9;1985:7;1981:23;1977:32;1974:52;;;2022:1;2019;2012:12;1974:52;2061:9;2048:23;2080:31;2105:5;2080:31;:::i;:::-;2130:5;2182:2;2167:18;;;;2154:32;;-1:-1:-1;;;1877:315:84:o;2379:456::-;2456:6;2464;2472;2525:2;2513:9;2504:7;2500:23;2496:32;2493:52;;;2541:1;2538;2531:12;2493:52;2580:9;2567:23;2599:31;2624:5;2599:31;:::i;:::-;2649:5;-1:-1:-1;2706:2:84;2691:18;;2678:32;2719:33;2678:32;2719:33;:::i;:::-;2379:456;;2771:7;;-1:-1:-1;;;2825:2:84;2810:18;;;;2797:32;;2379:456::o;2840:262::-;2914:6;2967:2;2955:9;2946:7;2942:23;2938:32;2935:52;;;2983:1;2980;2973:12;2935:52;3022:9;3009:23;3041:31;3066:5;3041:31;:::i;3107:127::-;3168:10;3163:3;3159:20;3156:1;3149:31;3199:4;3196:1;3189:15;3223:4;3220:1;3213:15;3239:632;3304:5;3334:18;3375:2;3367:6;3364:14;3361:40;;;3381:18;;:::i;:::-;3456:2;3450:9;3424:2;3510:15;;-1:-1:-1;;3506:24:84;;;3532:2;3502:33;3498:42;3486:55;;;3556:18;;;3576:22;;;3553:46;3550:72;;;3602:18;;:::i;:::-;3642:10;3638:2;3631:22;3671:6;3662:15;;3701:6;3693;3686:22;3741:3;3732:6;3727:3;3723:16;3720:25;3717:45;;;3758:1;3755;3748:12;3717:45;3808:6;3803:3;3796:4;3788:6;3784:17;3771:44;3863:1;3856:4;3847:6;3839;3835:19;3831:30;3824:41;;;;3239:632;;;;;:::o;3876:451::-;3945:6;3998:2;3986:9;3977:7;3973:23;3969:32;3966:52;;;4014:1;4011;4004:12;3966:52;4054:9;4041:23;4087:18;4079:6;4076:30;4073:50;;;4119:1;4116;4109:12;4073:50;4142:22;;4195:4;4187:13;;4183:27;-1:-1:-1;4173:55:84;;4224:1;4221;4214:12;4173:55;4247:74;4313:7;4308:2;4295:16;4290:2;4286;4282:11;4247:74;:::i;4332:615::-;4418:6;4426;4479:2;4467:9;4458:7;4454:23;4450:32;4447:52;;;4495:1;4492;4485:12;4447:52;4535:9;4522:23;4564:18;4605:2;4597:6;4594:14;4591:34;;;4621:1;4618;4611:12;4591:34;4659:6;4648:9;4644:22;4634:32;;4704:7;4697:4;4693:2;4689:13;4685:27;4675:55;;4726:1;4723;4716:12;4675:55;4766:2;4753:16;4792:2;4784:6;4781:14;4778:34;;;4808:1;4805;4798:12;4778:34;4861:7;4856:2;4846:6;4843:1;4839:14;4835:2;4831:23;4827:32;4824:45;4821:65;;;4882:1;4879;4872:12;4821:65;4913:2;4905:11;;;;;4935:6;;-1:-1:-1;4332:615:84;;-1:-1:-1;;;;4332:615:84:o;4952:349::-;5036:12;;-1:-1:-1;;;;;5032:38:84;5020:51;;5124:4;5113:16;;;5107:23;5132:18;5103:48;5087:14;;;5080:72;5215:4;5204:16;;;5198:23;5191:31;5184:39;5168:14;;;5161:63;5277:4;5266:16;;;5260:23;5285:8;5256:38;5240:14;;5233:62;4952:349::o;5306:726::-;5543:2;5595:21;;;5665:13;;5568:18;;;5687:22;;;5514:4;;5543:2;5766:15;;;;5740:2;5725:18;;;5514:4;5809:197;5823:6;5820:1;5817:13;5809:197;;;5872:52;5920:3;5911:6;5905:13;5872:52;:::i;:::-;5981:15;;;;5953:4;5944:14;;;;;5845:1;5838:9;5809:197;;6289:632;6460:2;6512:21;;;6582:13;;6485:18;;;6604:22;;;6431:4;;6460:2;6683:15;;;;6657:2;6642:18;;;6431:4;6726:169;6740:6;6737:1;6734:13;6726:169;;;6801:13;;6789:26;;6870:15;;;;6835:12;;;;6762:1;6755:9;6726:169;;6926:383;7003:6;7011;7019;7072:2;7060:9;7051:7;7047:23;7043:32;7040:52;;;7088:1;7085;7078:12;7040:52;7127:9;7114:23;7146:31;7171:5;7146:31;:::i;:::-;7196:5;7248:2;7233:18;;7220:32;;-1:-1:-1;7299:2:84;7284:18;;;7271:32;;6926:383;-1:-1:-1;;;6926:383:84:o;7314:118::-;7400:5;7393:13;7386:21;7379:5;7376:32;7366:60;;7422:1;7419;7412:12;7437:382;7502:6;7510;7563:2;7551:9;7542:7;7538:23;7534:32;7531:52;;;7579:1;7576;7569:12;7531:52;7618:9;7605:23;7637:31;7662:5;7637:31;:::i;:::-;7687:5;-1:-1:-1;7744:2:84;7729:18;;7716:32;7757:30;7716:32;7757:30;:::i;:::-;7806:7;7796:17;;;7437:382;;;;;:::o;7824:795::-;7919:6;7927;7935;7943;7996:3;7984:9;7975:7;7971:23;7967:33;7964:53;;;8013:1;8010;8003:12;7964:53;8052:9;8039:23;8071:31;8096:5;8071:31;:::i;:::-;8121:5;-1:-1:-1;8178:2:84;8163:18;;8150:32;8191:33;8150:32;8191:33;:::i;:::-;8243:7;-1:-1:-1;8297:2:84;8282:18;;8269:32;;-1:-1:-1;8352:2:84;8337:18;;8324:32;8379:18;8368:30;;8365:50;;;8411:1;8408;8401:12;8365:50;8434:22;;8487:4;8479:13;;8475:27;-1:-1:-1;8465:55:84;;8516:1;8513;8506:12;8465:55;8539:74;8605:7;8600:2;8587:16;8582:2;8578;8574:11;8539:74;:::i;:::-;8529:84;;;7824:795;;;;;;;:::o;8624:270::-;8824:3;8809:19;;8837:51;8813:9;8870:6;8837:51;:::i;8899:388::-;8967:6;8975;9028:2;9016:9;9007:7;9003:23;8999:32;8996:52;;;9044:1;9041;9034:12;8996:52;9083:9;9070:23;9102:31;9127:5;9102:31;:::i;:::-;9152:5;-1:-1:-1;9209:2:84;9194:18;;9181:32;9222:33;9181:32;9222:33;:::i;9292:241::-;9348:6;9401:2;9389:9;9380:7;9376:23;9372:32;9369:52;;;9417:1;9414;9407:12;9369:52;9456:9;9443:23;9475:28;9497:5;9475:28;:::i;9538:380::-;9617:1;9613:12;;;;9660;;;9681:61;;9735:4;9727:6;9723:17;9713:27;;9681:61;9788:2;9780:6;9777:14;9757:18;9754:38;9751:161;;9834:10;9829:3;9825:20;9822:1;9815:31;9869:4;9866:1;9859:15;9897:4;9894:1;9887:15;9751:161;;9538:380;;;:::o;10271:222::-;10336:9;;;10357:10;;;10354:133;;;10409:10;10404:3;10400:20;10397:1;10390:31;10444:4;10441:1;10434:15;10472:4;10469:1;10462:15;11201:184;11271:6;11324:2;11312:9;11303:7;11299:23;11295:32;11292:52;;;11340:1;11337;11330:12;11292:52;-1:-1:-1;11363:16:84;;11201:184;-1:-1:-1;11201:184:84:o;11669:245::-;11736:6;11789:2;11777:9;11768:7;11764:23;11760:32;11757:52;;;11805:1;11802;11795:12;11757:52;11837:9;11831:16;11856:28;11878:5;11856:28;:::i;12045:545::-;12147:2;12142:3;12139:11;12136:448;;;12183:1;12208:5;12204:2;12197:17;12253:4;12249:2;12239:19;12323:2;12311:10;12307:19;12304:1;12300:27;12294:4;12290:38;12359:4;12347:10;12344:20;12341:47;;;-1:-1:-1;12382:4:84;12341:47;12437:2;12432:3;12428:12;12425:1;12421:20;12415:4;12411:31;12401:41;;12492:82;12510:2;12503:5;12500:13;12492:82;;;12555:17;;;12536:1;12525:13;12492:82;;12766:1352;12892:3;12886:10;12919:18;12911:6;12908:30;12905:56;;;12941:18;;:::i;:::-;12970:97;13060:6;13020:38;13052:4;13046:11;13020:38;:::i;:::-;13014:4;12970:97;:::i;:::-;13122:4;;13186:2;13175:14;;13203:1;13198:663;;;;13905:1;13922:6;13919:89;;;-1:-1:-1;13974:19:84;;;13968:26;13919:89;-1:-1:-1;;12723:1:84;12719:11;;;12715:24;12711:29;12701:40;12747:1;12743:11;;;12698:57;14021:81;;13168:944;;13198:663;11992:1;11985:14;;;12029:4;12016:18;;-1:-1:-1;;13234:20:84;;;13352:236;13366:7;13363:1;13360:14;13352:236;;;13455:19;;;13449:26;13434:42;;13547:27;;;;13515:1;13503:14;;;;13382:19;;13352:236;;;13356:3;13616:6;13607:7;13604:19;13601:201;;;13677:19;;;13671:26;-1:-1:-1;;13760:1:84;13756:14;;;13772:3;13752:24;13748:37;13744:42;13729:58;13714:74;;13601:201;-1:-1:-1;;;;;13848:1:84;13832:14;;;13828:22;13815:36;;-1:-1:-1;12766:1352:84:o;14123:127::-;14184:10;14179:3;14175:20;14172:1;14165:31;14215:4;14212:1;14205:15;14239:4;14236:1;14229:15;14255:1020;14431:3;14460:1;14493:6;14487:13;14523:36;14549:9;14523:36;:::i;:::-;14578:1;14595:18;;;14622:133;;;;14769:1;14764:356;;;;14588:532;;14622:133;-1:-1:-1;;14655:24:84;;14643:37;;14728:14;;14721:22;14709:35;;14700:45;;;-1:-1:-1;14622:133:84;;14764:356;14795:6;14792:1;14785:17;14825:4;14870:2;14867:1;14857:16;14895:1;14909:165;14923:6;14920:1;14917:13;14909:165;;;15001:14;;14988:11;;;14981:35;15044:16;;;;14938:10;;14909:165;;;14913:3;;;15103:6;15098:3;15094:16;15087:23;;14588:532;;;;;15151:6;15145:13;15167:68;15226:8;15221:3;15214:4;15206:6;15202:17;15167:68;:::i;:::-;15251:18;;14255:1020;-1:-1:-1;;;;14255:1020:84:o;16604:489::-;-1:-1:-1;;;;;16873:15:84;;;16855:34;;16925:15;;16920:2;16905:18;;16898:43;16972:2;16957:18;;16950:34;;;17020:3;17015:2;17000:18;;16993:31;;;16798:4;;17041:46;;17067:19;;17059:6;17041:46;:::i;:::-;17033:54;16604:489;-1:-1:-1;;;;;;16604:489:84:o;17098:249::-;17167:6;17220:2;17208:9;17199:7;17195:23;17191:32;17188:52;;;17236:1;17233;17226:12;17188:52;17268:9;17262:16;17287:30;17311:5;17287:30;:::i;17671:209::-;17703:1;17729;17719:132;;17773:10;17768:3;17764:20;17761:1;17754:31;17808:4;17805:1;17798:15;17836:4;17833:1;17826:15;17719:132;-1:-1:-1;17865:9:84;;17671:209::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAX_SUPPLY()": "32cb6b0c",
    "MINT_OPEN()": "088b6943",
    "PRICE()": "8d859f3e",
    "REVEAL_TIMESTAMP()": "18e20a38",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "explicitOwnershipsOf(uint256[])": "5bbb2177",
    "getApproved(uint256)": "081812fc",
    "getBaseURI()": "714c5398",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "setMintOpen(bool)": "f8004d31",
    "setPrice(uint256)": "91b7f5ed",
    "setRevealTimestamp(uint256)": "018a2c37",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdrawAll(address)": "fa09e630",
    "withdrawTokens(address)": "49df728c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_OPEN\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVEAL_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"setMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"setRevealTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/ERC721A_Template.sol\":\"ERC721A_Template\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@hyperlane-xyz/=node_modules/@hyperlane-xyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidstate/=node_modules/@solidstate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/tokens/ERC721A_Template.sol\":{\"keccak256\":\"0x00100236d3c78da73478d916ef0a668b16788d9cfcd82c3aed27a36bdf6bb1fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66bf4bd635f5f29511481e3d9a78af89e6b3d4ee05a5d4d5d6327445b30861f5\",\"dweb:/ipfs/QmcHiJHA3HWWYm6UMTjwsM6bBM1AiWCy9xstVCzPV4mYm7\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205\",\"dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW\"]},\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINT_OPEN",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REVEAL_TIMESTAMP",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721A.TokenOwnership",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipsOf",
          "outputs": [
            {
              "internalType": "struct IERC721A.TokenOwnership[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isOpen",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMintOpen"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRevealTimestamp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "explicitOwnershipsOf(uint256[])": {
            "details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@hyperlane-xyz/=node_modules/@hyperlane-xyz/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidstate/=node_modules/@solidstate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a/=node_modules/erc721a/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/tokens/ERC721A_Template.sol": "ERC721A_Template"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/tokens/ERC721A_Template.sol": {
        "keccak256": "0x00100236d3c78da73478d916ef0a668b16788d9cfcd82c3aed27a36bdf6bb1fe",
        "urls": [
          "bzz-raw://66bf4bd635f5f29511481e3d9a78af89e6b3d4ee05a5d4d5d6327445b30861f5",
          "dweb:/ipfs/QmcHiJHA3HWWYm6UMTjwsM6bBM1AiWCy9xstVCzPV4mYm7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/ERC721A.sol": {
        "keccak256": "0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c",
        "urls": [
          "bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809",
          "dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/IERC721A.sol": {
        "keccak256": "0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad",
        "urls": [
          "bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9",
          "dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol": {
        "keccak256": "0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7",
        "urls": [
          "bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205",
          "dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol": {
        "keccak256": "0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942",
        "urls": [
          "bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84",
          "dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/tokens/ERC721A_Template.sol",
    "id": 1513,
    "exportedSymbols": {
      "Context": [
        2049
      ],
      "ERC721A": [
        11191
      ],
      "ERC721AQueryable": [
        11772
      ],
      "ERC721A_Template": [
        1512
      ],
      "ERC721A__IERC721Receiver": [
        9586
      ],
      "IERC20": [
        1911
      ],
      "IERC721A": [
        11397
      ],
      "IERC721AQueryable": [
        11824
      ],
      "Math": [
        3101
      ],
      "Ownable": [
        1827
      ],
      "Strings": [
        2224
      ]
    },
    "nodeType": "SourceUnit",
    "src": "185:2711:9",
    "nodes": [
      {
        "id": 1218,
        "nodeType": "PragmaDirective",
        "src": "185:24:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 1219,
        "nodeType": "ImportDirective",
        "src": "211:51:9",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1513,
        "sourceUnit": 2225,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1220,
        "nodeType": "ImportDirective",
        "src": "263:52:9",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1513,
        "sourceUnit": 1828,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1221,
        "nodeType": "ImportDirective",
        "src": "316:55:9",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1513,
        "sourceUnit": 1831,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1222,
        "nodeType": "ImportDirective",
        "src": "373:59:9",
        "nodes": [],
        "absolutePath": "node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol",
        "file": "erc721a/contracts/extensions/ERC721AQueryable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1513,
        "sourceUnit": 11773,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1512,
        "nodeType": "ContractDefinition",
        "src": "434:2462:9",
        "nodes": [
          {
            "id": 1229,
            "nodeType": "UsingForDirective",
            "src": "495:26:9",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1227,
              "name": "Strings",
              "nameLocations": [
                "501:7:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2224,
              "src": "501:7:9"
            },
            "typeName": {
              "id": 1228,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1232,
            "nodeType": "VariableDeclaration",
            "src": "549:32:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "8d859f3e",
            "mutability": "mutable",
            "name": "PRICE",
            "nameLocation": "564:5:9",
            "scope": 1512,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1230,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "549:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 1231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "572:9:9",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "id": 1235,
            "nodeType": "VariableDeclaration",
            "src": "587:33:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "32cb6b0c",
            "mutability": "mutable",
            "name": "MAX_SUPPLY",
            "nameLocation": "602:10:9",
            "scope": 1512,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1233,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 1234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "615:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "id": 1237,
            "nodeType": "VariableDeclaration",
            "src": "626:31:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "18e20a38",
            "mutability": "mutable",
            "name": "REVEAL_TIMESTAMP",
            "nameLocation": "641:16:9",
            "scope": 1512,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1240,
            "nodeType": "VariableDeclaration",
            "src": "684:29:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "088b6943",
            "mutability": "mutable",
            "name": "MINT_OPEN",
            "nameLocation": "696:9:9",
            "scope": 1512,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1238,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "684:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1239,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "708:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "id": 1242,
            "nodeType": "VariableDeclaration",
            "src": "719:14:9",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "726:7:9",
            "scope": 1512,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1241,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "719:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1266,
            "nodeType": "FunctionDefinition",
            "src": "740:193:9",
            "nodes": [],
            "body": {
              "id": 1265,
              "nodeType": "Block",
              "src": "860:73:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1258,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "881:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1257,
                      "name": "setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "870:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "870:16:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1262,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "915:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1261,
                      "name": "setRevealTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "896:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "896:30:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1253,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1244,
                    "src": "844:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1254,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1246,
                    "src": "851:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1255,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1252,
                  "name": "ERC721A",
                  "nameLocations": [
                    "836:7:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11191,
                  "src": "836:7:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "836:23:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1244,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "766:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "752:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1246,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "787:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "773:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1245,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "810:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "796:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "824:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "816:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "751:84:9"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1275,
            "nodeType": "FunctionDefinition",
            "src": "939:98:9",
            "nodes": [],
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "1006:31:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1272,
                    "name": "baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1242,
                    "src": "1023:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1271,
                  "id": 1273,
                  "nodeType": "Return",
                  "src": "1016:14:9"
                }
              ]
            },
            "baseFunctions": [
              9973
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "948:8:9",
            "overrides": {
              "id": 1268,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "973:8:9"
            },
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:2:9"
            },
            "returnParameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "991:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "990:15:9"
            },
            "scope": 1512,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1283,
            "nodeType": "FunctionDefinition",
            "src": "1043:91:9",
            "nodes": [],
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "1103:31:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1280,
                    "name": "baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1242,
                    "src": "1120:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1279,
                  "id": 1281,
                  "nodeType": "Return",
                  "src": "1113:14:9"
                }
              ]
            },
            "functionSelector": "714c5398",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseURI",
            "nameLocation": "1052:10:9",
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:2:9"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "1088:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1087:15:9"
            },
            "scope": 1512,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1295,
            "nodeType": "FunctionDefinition",
            "src": "1140:88:9",
            "nodes": [],
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "1197:31:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1290,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "1207:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1291,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "1217:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1207:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:14:9"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1287,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1187:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1746,
                  "src": "1187:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:9:9"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "1149:10:9",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "1174:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "1160:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1159:20:9"
            },
            "returnParameters": {
              "id": 1289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1307,
            "nodeType": "FunctionDefinition",
            "src": "1234:88:9",
            "nodes": [],
            "body": {
              "id": 1306,
              "nodeType": "Block",
              "src": "1286:36:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1302,
                      "name": "MINT_OPEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "1296:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1303,
                      "name": "_isOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1297,
                      "src": "1308:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1296:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:19:9"
                }
              ]
            },
            "functionSelector": "f8004d31",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1299,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1276:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1746,
                  "src": "1276:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1276:9:9"
              }
            ],
            "name": "setMintOpen",
            "nameLocation": "1243:11:9",
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "_isOpen",
                  "nameLocation": "1260:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1307,
                  "src": "1255:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1254:14:9"
            },
            "returnParameters": {
              "id": 1301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1286:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1319,
            "nodeType": "FunctionDefinition",
            "src": "1328:111:9",
            "nodes": [],
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "1393:46:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1314,
                      "name": "REVEAL_TIMESTAMP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "1403:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1315,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1309,
                      "src": "1422:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1403:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:29:9"
                }
              ]
            },
            "functionSelector": "018a2c37",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1311,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1383:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1746,
                  "src": "1383:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1383:9:9"
              }
            ],
            "name": "setRevealTimestamp",
            "nameLocation": "1337:18:9",
            "parameters": {
              "id": 1310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "1364:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "1356:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:20:9"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1331,
            "nodeType": "FunctionDefinition",
            "src": "1446:90:9",
            "nodes": [],
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1502:34:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1326,
                      "name": "PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "1512:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1327,
                      "name": "_newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1321,
                      "src": "1520:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1512:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:17:9"
                }
              ]
            },
            "functionSelector": "91b7f5ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1323,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1492:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1746,
                  "src": "1492:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1492:9:9"
              }
            ],
            "name": "setPrice",
            "nameLocation": "1455:8:9",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "_newPrice",
                  "nameLocation": "1472:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1464:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1463:19:9"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1371,
            "nodeType": "FunctionDefinition",
            "src": "1542:307:9",
            "nodes": [],
            "body": {
              "id": 1370,
              "nodeType": "Block",
              "src": "1601:248:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1339,
                        "name": "MINT_OPEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "1619:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67206973206e6f74206f70656e",
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1630:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3666670c95c484ede253f1530d301426ebc022c93932934197089cc88f9b271",
                          "typeString": "literal_string \"Minting is not open\""
                        },
                        "value": "Minting is not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3666670c95c484ede253f1530d301426ebc022c93932934197089cc88f9b271",
                          "typeString": "literal_string \"Minting is not open\""
                        }
                      ],
                      "id": 1338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1611:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:41:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1344,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "1670:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1680:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1670:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1347,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9740,
                                "src": "1685:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1685:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1349,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1335,
                              "src": "1701:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1685:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1351,
                            "name": "MAX_SUPPLY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "1712:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1685:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1670:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420696e76616c6964",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc2b6eac6664d87fabbac5512b69f7856cb34ca83d21b7f4782491e5d9b74dfb",
                          "typeString": "literal_string \"Amount invalid\""
                        },
                        "value": "Amount invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc2b6eac6664d87fabbac5512b69f7856cb34ca83d21b7f4782491e5d9b74dfb",
                          "typeString": "literal_string \"Amount invalid\""
                        }
                      ],
                      "id": 1343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1662:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:79:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:79:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1759:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1763:5:9",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1759:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1360,
                          "name": "PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1232,
                          "src": "1772:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1759:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45746865722076616c75652073656e74206973206e6f7420636f7272656374",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1779:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f2866f2d9fce93a0baf3856b493e9407095000996fea2f7904a39c9164781ad",
                          "typeString": "literal_string \"Ether value sent is not correct\""
                        },
                        "value": "Ether value sent is not correct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f2866f2d9fce93a0baf3856b493e9407095000996fea2f7904a39c9164781ad",
                          "typeString": "literal_string \"Ether value sent is not correct\""
                        }
                      ],
                      "id": 1357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1751:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1366,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1333,
                        "src": "1829:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1367,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "1834:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1365,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10727,
                      "src": "1823:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:19:9"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1551:4:9",
            "parameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1564:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "1556:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1335,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1577:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "1569:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1555:30:9"
            },
            "returnParameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1601:0:9"
            },
            "scope": 1512,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1402,
            "nodeType": "FunctionDefinition",
            "src": "1855:227:9",
            "nodes": [],
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "1940:142:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1381,
                      "mutability": "mutable",
                      "name": "newTokenId",
                      "nameLocation": "1958:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1401,
                      "src": "1950:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1950:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1398,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1387,
                                        "name": "timestamp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1373,
                                        "src": "2007:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1385,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1990:3:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1386,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1994:12:9",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1990:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1990:27:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1384,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1980:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1980:38:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1972:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1382,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1972:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1972:47:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1391,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1375,
                            "src": "2022:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1972:57:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1393,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1971:59:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "components": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1394,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9740,
                            "src": "2034:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2034:13:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1396,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2033:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1971:77:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1950:98:9"
                },
                {
                  "expression": {
                    "id": 1399,
                    "name": "newTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1381,
                    "src": "2065:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1379,
                  "id": 1400,
                  "nodeType": "Return",
                  "src": "2058:17:9"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_random",
            "nameLocation": "1864:7:9",
            "parameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1373,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1880:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "1872:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1899:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "1891:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:36:9"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "1931:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1930:9:9"
            },
            "scope": 1512,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1458,
            "nodeType": "FunctionDefinition",
            "src": "2088:449:9",
            "nodes": [],
            "body": {
              "id": 1457,
              "nodeType": "Block",
              "src": "2187:350:9",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2201:17:9",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1413,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1404,
                          "src": "2210:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1412,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10315,
                        "src": "2202:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2202:16:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "nodeType": "IfStatement",
                  "src": "2197:59:9",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1416,
                        "name": "URIQueryForNonexistentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11227,
                        "src": "2227:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2227:29:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1418,
                    "nodeType": "RevertStatement",
                    "src": "2220:36:9"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1420,
                      "name": "REVEAL_TIMESTAMP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "2271:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2291:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2271:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1425,
                  "nodeType": "IfStatement",
                  "src": "2267:41:9",
                  "trueBody": {
                    "expression": {
                      "id": 1423,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "2301:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 1411,
                    "id": 1424,
                    "nodeType": "Return",
                    "src": "2294:14:9"
                  }
                },
                {
                  "assignments": [
                    1427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nameLocation": "2333:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1457,
                      "src": "2319:23:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2319:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1429,
                  "initialValue": {
                    "hexValue": "",
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2345:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2319:28:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1432,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1242,
                            "src": "2367:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2361:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1430,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2361:5:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2361:14:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 1434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2376:6:9",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2361:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2385:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2361:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1454,
                  "nodeType": "IfStatement",
                  "src": "2357:148:9",
                  "trueBody": {
                    "id": 1453,
                    "nodeType": "Block",
                    "src": "2388:117:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1437,
                            "name": "_tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "2402:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1442,
                                    "name": "baseURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1242,
                                    "src": "2438:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1444,
                                            "name": "REVEAL_TIMESTAMP",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1237,
                                            "src": "2455:16:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 1445,
                                            "name": "tokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1404,
                                            "src": "2473:7:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 1443,
                                          "name": "_random",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1402,
                                          "src": "2447:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) view returns (uint256)"
                                          }
                                        },
                                        "id": 1446,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2447:34:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1447,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2482:8:9",
                                      "memberName": "toString",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2107,
                                      "src": "2447:43:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 1448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2447:45:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1440,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2421:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2425:12:9",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2421:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2421:72:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2414:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1438,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "2414:6:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2414:80:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2402:92:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1452,
                        "nodeType": "ExpressionStatement",
                        "src": "2402:92:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1455,
                    "name": "_tokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1427,
                    "src": "2521:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1411,
                  "id": 1456,
                  "nodeType": "Return",
                  "src": "2514:16:9"
                }
              ]
            },
            "baseFunctions": [
              9964,
              11385
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2097:8:9",
            "overrides": {
              "id": 1408,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1406,
                  "name": "ERC721A",
                  "nameLocations": [
                    "2144:7:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11191,
                  "src": "2144:7:9"
                },
                {
                  "id": 1407,
                  "name": "IERC721A",
                  "nameLocations": [
                    "2153:8:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11397,
                  "src": "2153:8:9"
                }
              ],
              "src": "2135:27:9"
            },
            "parameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1404,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2114:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "2106:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:17:9"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "2172:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2171:15:9"
            },
            "scope": 1512,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1484,
            "nodeType": "FunctionDefinition",
            "src": "2543:178:9",
            "nodes": [],
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "2594:127:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1466,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1466,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2610:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1483,
                      "src": "2605:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2605:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1477,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2664:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1467,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1460,
                          "src": "2623:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2627:4:9",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2623:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1471,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2648:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721A_Template_$1512",
                                  "typeString": "contract ERC721A_Template"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC721A_Template_$1512",
                                  "typeString": "contract ERC721A_Template"
                                }
                              ],
                              "id": 1470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2640:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1469,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2640:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2640:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2654:7:9",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2640:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2623:40:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2604:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1479,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "2685:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5769746864726177616c206661696c6564",
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2694:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
                          "typeString": "literal_string \"Withdrawal failed\""
                        },
                        "value": "Withdrawal failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
                          "typeString": "literal_string \"Withdrawal failed\""
                        }
                      ],
                      "id": 1478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2677:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2677:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:37:9"
                }
              ]
            },
            "functionSelector": "fa09e630",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1462,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2584:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1746,
                  "src": "2584:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2584:9:9"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "2552:11:9",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2572:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "2564:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2564:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2563:13:9"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1511,
            "nodeType": "FunctionDefinition",
            "src": "2727:167:9",
            "nodes": [],
            "body": {
              "id": 1510,
              "nodeType": "Block",
              "src": "2782:112:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2800:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1510,
                      "src": "2792:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2792:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1501,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1498,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2834:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721A_Template_$1512",
                              "typeString": "contract ERC721A_Template"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721A_Template_$1512",
                              "typeString": "contract ERC721A_Template"
                            }
                          ],
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2826:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2826:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2826:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1494,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "2810:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1911",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2816:9:9",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1868,
                      "src": "2810:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2792:48:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1505,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "2865:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2865:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1507,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "2879:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1502,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "2850:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1911",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2856:8:9",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1878,
                      "src": "2850:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:37:9"
                }
              ]
            },
            "functionSelector": "49df728c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1489,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2772:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1746,
                  "src": "2772:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2772:9:9"
              }
            ],
            "name": "withdrawTokens",
            "nameLocation": "2736:14:9",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2758:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "2751:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1911",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1486,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1485,
                      "name": "IERC20",
                      "nameLocations": [
                        "2751:6:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1911,
                      "src": "2751:6:9"
                    },
                    "referencedDeclaration": 1911,
                    "src": "2751:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1911",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2750:14:9"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:9"
            },
            "scope": 1512,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1223,
              "name": "ERC721AQueryable",
              "nameLocations": [
                "463:16:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11772,
              "src": "463:16:9"
            },
            "id": 1224,
            "nodeType": "InheritanceSpecifier",
            "src": "463:16:9"
          },
          {
            "baseName": {
              "id": 1225,
              "name": "Ownable",
              "nameLocations": [
                "481:7:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1827,
              "src": "481:7:9"
            },
            "id": 1226,
            "nodeType": "InheritanceSpecifier",
            "src": "481:7:9"
          }
        ],
        "canonicalName": "ERC721A_Template",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1512,
          1827,
          2049,
          11772,
          11824,
          11191,
          11397
        ],
        "name": "ERC721A_Template",
        "nameLocation": "443:16:9",
        "scope": 1513,
        "usedErrors": [
          11197,
          11200,
          11203,
          11206,
          11209,
          11212,
          11215,
          11218,
          11221,
          11224,
          11227,
          11230,
          11233,
          11781
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 9
}